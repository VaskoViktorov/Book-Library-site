<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Back" xml:space="preserve">
    <value>Назад</value>
  </data>
  <data name="FifthParagraph" xml:space="preserve">
    <value>Чрез традиционните форми на библиотечно-информационно обслужване и използвайки богатия фонд и справочен апарат се предоставя пълна и точна информация по заявените от потребителя искания.</value>
  </data>
  <data name="FirstParagraph" xml:space="preserve">
    <value>Архив на ръкописни, печатни и електронни материали за природните условия и богатства, местната история, стопанското развитие, духовния и културен живот на гр. Видин и областта в цялото му многообразие.</value>
  </data>
  <data name="FourthParagraph" xml:space="preserve">
    <value>В отдела има система от каталози и картотеки, поддържат се две електронните бази данни, които съдържат анотирана библиографска информация за факти, събития и личности.</value>
  </data>
  <data name="Homeland" xml:space="preserve">
    <value>Отдел „Краезнание”</value>
  </data>
  <data name="MondayFriday" xml:space="preserve">
    <value>Понеделник - Петък</value>
  </data>
  <data name="OpeningHours" xml:space="preserve">
    <value>Работно време</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Събота</value>
  </data>
  <data name="SaturdayWorkTime" xml:space="preserve">
    <value>Почивен ден</value>
  </data>
  <data name="SecondParagraph" xml:space="preserve">
    <value>В отдела се работи по издирване, съхраняване, разкриване и предоставяне за ползване от потребителите на библиотеката на издания, публикации, снимки и други носители на краеведска информация, които имат научна, документална, историческа, художествена или практическа стойност и по авторство, съдържание или местоиздаване са свързани с края.</value>
  </data>
  <data name="SeventhParagraph" xml:space="preserve">
    <value>Към отдела са обособени сбирки «Стари книги, редки и ценни издания», «Книги с автографи», «Старият Видин», в които читателите могат да ползват първите печатани във Видин книги и издавани вестници от 1874 г. до сега, и да разгледат снимки от стария Видин.</value>
  </data>
  <data name="SixthParagraph" xml:space="preserve">
    <value>Информация за местни личности и институции може да се почерпи и от библиографски указатели, биобиблиографии и юбилейни сборници, издавани от библиотечните специалисти в отдела.</value>
  </data>
  <data name="ThirdParagraph" xml:space="preserve">
    <value>Краеведската сбирка е обособен през 1966 г. Събран е ценен фонд от 2735 библиотечни единици, който непрекъснато се обновява.</value>
  </data>
  <data name="WeekWorkTime" xml:space="preserve">
    <value>9:00-12:00 часа; 12:30-17:00 часа</value>
  </data>
</root>