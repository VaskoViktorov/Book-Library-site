<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HeadingFirst" xml:space="preserve">
    <value>When can I donate</value>
  </data>
  <data name="HeadingFourth" xml:space="preserve">
    <value>General Guidelines for Donations</value>
  </data>
  <data name="HeadingSecond" xml:space="preserve">
    <value>What can I donate</value>
  </data>
  <data name="HeadingThird" xml:space="preserve">
    <value>Where can I donate</value>
  </data>
  <data name="liEighth" xml:space="preserve">
    <value>Any type of damage (from water, burned, dirty or has traces of mold)</value>
  </data>
  <data name="liFifth" xml:space="preserve">
    <value>Magazines - history, art, literature, antiques</value>
  </data>
  <data name="liFirst" xml:space="preserve">
    <value>Books - for children or adults (hard or soft cover)</value>
  </data>
  <data name="liFourth" xml:space="preserve">
    <value>CD / DVD / cassettes</value>
  </data>
  <data name="liNinth" xml:space="preserve">
    <value>Excessive writing, markings, or highlighting</value>
  </data>
  <data name="liSecond" xml:space="preserve">
    <value>Manuscripts</value>
  </data>
  <data name="liSeventh" xml:space="preserve">
    <value>Missing covers or pages</value>
  </data>
  <data name="liSixth" xml:space="preserve">
    <value>Other - for other type of donation, please contact us on the above-mentioned phone or email.</value>
  </data>
  <data name="liThird" xml:space="preserve">
    <value>Gramophone records</value>
  </data>
  <data name="metadata" xml:space="preserve">
    <value>Regional Library 'Mihalaki Georgiev' welcomes donations that will expand, enchance and supplement the library fund.</value>
  </data>
  <data name="ParagraphFirstPartOne" xml:space="preserve">
    <value>Regional Library "Mihalaki Georgiev" welcomes donations that will expand, enchance and supplement the library fund. Potential donations are reviewed by the employees in</value>
  </data>
  <data name="ParagraphFirstPartThree" xml:space="preserve">
    <value>to determine their relevance and their place in the library. If you are considering making a material donation to "Mihalaki Georgiev" Regional Library,&lt;span class = "bold"&gt; please contact us at  +359 094 601-704 or email us at &lt;a&gt; libvidin@vidin.net &lt;/a&gt; &lt;/ span&gt;</value>
  </data>
  <data name="ParagraphFirstPartTwo" xml:space="preserve">
    <value>"Supplying, registration and cataloging" department</value>
  </data>
  <data name="ParagraphFourth" xml:space="preserve">
    <value>Rule of thumb: If you wouldn’t buy it or give it to a friend, think twice about donating it. Condition matters – if your items have any of the following issues, they usually won’t be accepted:</value>
  </data>
  <data name="ParagraphSecond" xml:space="preserve">
    <value>You can make your donation during working hours from 9:00 am to 4:00 pm, Monday through Friday (excluding public holidays).</value>
  </data>
  <data name="ParagraphThirdPartFive" xml:space="preserve">
    <value>of the library</value>
  </data>
  <data name="ParagraphThirdPartFour" xml:space="preserve">
    <value>the first floor</value>
  </data>
  <data name="ParagraphThirdPartOne" xml:space="preserve">
    <value>The donations are accepted in</value>
  </data>
  <data name="ParagraphThirdPartThree" xml:space="preserve">
    <value>which is located on</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Material Donation</value>
  </data>
</root>