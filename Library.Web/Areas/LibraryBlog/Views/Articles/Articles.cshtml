@model ArticleListingViewModel
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["News"];
    ViewData["Description"] = Localizer["Take a look at the latest news and events in Regional Library \'Mihalaki Georgiev\' - Vidin. Page:"].Value + " " + Model.CurrentPage;

    var previousDisabled = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    var nextDisabled = Model.TotalPages == Model.CurrentPage ? "disabled" : string.Empty;
}
<div class="row hidden-xs">
    <div class="mr-0-auto col-md-offset-6 width-30">
        <div id="lib-search" class="third-color-b dropdown">
            <a class="glyphicon glyphicon-search second-color dropdown-toggle cr-pointer search-box-ico" data-toggle="dropdown" aria-expanded="false"></a>
            <span class="second-color p-l-10">@Localizer["Search"]</span>
            <div class="first-color-b dropdown-menu drop search-box">
                @await Component.InvokeAsync("Search")
            </div>
        </div>
    </div>
</div>
<div id="search-head" class="row text-center">
    <h2>@ViewData["Title"]</h2>
</div>
<div class="row text-center mr-t-b-25">
    @if (User.IsInRole(WebConstants.LibrarianAuthorRole) || User.IsInRole(WebConstants.AdministratorRole))
    {
        <a class="btn-sm btn-success mr-l-25" asp-area="LibraryBlog" asp-controller="Articles" asp-action="Create">@Localizer["Create"]</a>
    }
</div>
<div class="row">
    @Html.Partial("_ArticlesListingView", Model)
    <div class="text-center">
        <ul class="pagination">
            <li class="page-item @previousDisabled">
                <a class="page-link @previousDisabled" asp-route-page="@Model.PreviousPage" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">@Localizer["Previous"]</span>
                </a>
            </li>
            @if (Model.CurrentPage > 2)
            {
                <li class="page-item 1"><a class="page-link" asp-route-page="1">1</a></li>
                if (Model.CurrentPage == Model.TotalPages)
                {
                    <li class="page-item disabled"><a class="bold first-color disabled">...</a></li>
                }
            }
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item @(Model.PreviousPage)"><a class="page-link" asp-route-page="@Model.PreviousPage">@Model.PreviousPage</a></li>
            }
            <li id="current" class="page-item @(Model.CurrentPage)"><a class="page-link disabled">@Model.CurrentPage</a></li>
            @if (Model.CurrentPage < Model.TotalPages - 1)
            {
                <li class="page-item @(Model.NextPage)"><a class="page-link" asp-route-page="@Model.NextPage">@Model.NextPage</a></li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                if (Model.CurrentPage < Model.TotalPages - 2)
                {
                    <li class="page-item disabled"><a class="bold first-color disabled">...</a></li>
                }
                <li class="page-item @(Model.TotalPages)"><a class="page-link" asp-route-page="@Model.TotalPages">@Model.TotalPages</a></li>
            }
            <li class="page-item @nextDisabled">
                <a class="page-link @nextDisabled" asp-route-page="@Model.NextPage" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">@Localizer["Next"]</span>
                </a>
            </li>
        </ul>
    </div>
</div>
